{
  "name": "pingtopass-nuxt",
  "version": "1.0.0",
  "description": "PingToPass - IT Certification Exam Platform built with Nuxt 3, Turso, and Cloudflare Edge",
  "private": true,
  "type": "module",
  "scripts": {
    "build": "nuxt build",
    "dev": "nuxt dev",
    "dev:debug": "nuxt dev --inspect",
    "dev:https": "nuxt dev --https --ssl-cert ./certs/localhost.pem --ssl-key ./certs/localhost-key.pem",
    "generate": "nuxt generate",
    "preview": "nuxt preview",
    "postinstall": "nuxt prepare",
    "lint": "eslint .",
    "lint:fix": "eslint . --fix",
    "typecheck": "nuxt typecheck",
    "test": "vitest",
    "test:ui": "vitest --ui",
    "test:watch": "vitest --watch",
    "test:coverage": "vitest --coverage",
    "test:e2e": "playwright test",
    "test:e2e:debug": "playwright test --debug",
    "test:e2e:ui": "playwright test --ui",
    "test:all": "npm run typecheck && npm run lint && npm run test && npm run test:e2e",
    "test:ci": "npm run typecheck && npm run lint && npm run test --run && npm run test:e2e",
    "db:setup": "./scripts/setup-databases.sh all",
    "db:setup:dev": "./scripts/setup-databases.sh dev",
    "db:setup:staging": "./scripts/setup-databases.sh staging",
    "db:setup:prod": "./scripts/setup-databases.sh prod",
    "db:migrate": "NODE_ENV=development tsx database/migrate.ts",
    "db:migrate:staging": "NODE_ENV=staging tsx database/migrate.ts",
    "db:migrate:prod": "NODE_ENV=production tsx database/migrate.ts",
    "db:migrate:status": "tsx database/migrate.ts status",
    "db:seed": "NODE_ENV=development tsx database/seed.ts",
    "db:seed:clear": "NODE_ENV=development tsx database/seed.ts --clear",
    "db:seed:staging": "NODE_ENV=staging tsx database/seed.ts",
    "db:shell": "turso db shell pingtopass-dev-$(whoami)",
    "db:shell:staging": "turso db shell pingtopass-staging-$(whoami)",
    "db:shell:prod": "turso db shell pingtopass-prod-$(whoami)",
    "db:inspect": "turso db inspect pingtopass-dev-$(whoami)",
    "db:backup": "turso db dump pingtopass-prod-$(whoami) > backups/backup-$(date +%Y%m%d-%H%M%S).sql",
    "wrangler:dev": "wrangler pages dev .output/public --compatibility-date=2024-01-01",
    "wrangler:deploy": "npm run build && wrangler pages deploy .output/public",
    "deploy:dev": "npm run build && wrangler pages deploy .output/public --project-name=pingtopass --env=development",
    "deploy:staging": "npm run build && wrangler pages deploy .output/public --project-name=pingtopass --env=staging",
    "deploy:prod": "npm run build && wrangler pages deploy .output/public --project-name=pingtopass --env=production",
    "logs:dev": "wrangler pages deployment tail --project-name=pingtopass --env=development",
    "logs:staging": "wrangler pages deployment tail --project-name=pingtopass --env=staging",
    "logs:prod": "wrangler pages deployment tail --project-name=pingtopass --env=production",
    "setup:full": "npm run db:setup && npm run db:migrate && npm run db:seed",
    "setup:dev": "npm run db:setup:dev && npm run db:migrate && npm run db:seed",
    "setup:env": "./scripts/setup-dev-environment.sh",
    "setup:https": "mkcert -install && mkcert localhost 127.0.0.1 ::1",
    "validate": "./scripts/validate-setup.sh",
    "validate:fix": "./scripts/validate-setup.sh --fix",
    "validate:verbose": "./scripts/validate-setup.sh --verbose",
    "clean": "rm -rf .nuxt .output node_modules/.cache",
    "clean:full": "npm run clean && rm -rf node_modules && npm install",
    "check": "npm run typecheck && npm run lint",
    "fix": "npm run lint:fix",
    "start": "node .output/server/index.mjs"
  },
  "dependencies": {
    "@langchain/core": "^0.1.59",
    "@langchain/openai": "^0.0.25",
    "@libsql/client": "^0.5.2",
    "@nuxt/ui": "^2.18.4",
    "@pinia/nuxt": "^0.5.1",
    "@tsndr/cloudflare-worker-jwt": "^2.4.2",
    "@vueuse/nuxt": "^10.9.0",
    "bcryptjs": "^2.4.3",
    "google-auth-library": "^9.7.0",
    "langchain": "^0.1.36",
    "nuxt": "^3.11.2",
    "stripe": "^14.21.0",
    "vue": "^3.4.21",
    "vue-router": "^4.3.0",
    "zod": "^3.22.4"
  },
  "devDependencies": {
    "@nuxt/devtools": "latest",
    "@nuxt/eslint-config": "^0.3.0",
    "@nuxt/test-utils": "^3.12.1",
    "@playwright/test": "^1.42.1",
    "@types/bcryptjs": "^2.4.6",
    "@types/node": "^20.11.30",
    "dotenv": "^17.2.1",
    "eslint": "^8.57.0",
    "happy-dom": "^14.3.1",
    "tsx": "^4.7.1",
    "typescript": "^5.4.3",
    "vitest": "^1.4.0",
    "wrangler": "^3.48.0"
  },
  "engines": {
    "node": ">=18.0.0"
  }
}